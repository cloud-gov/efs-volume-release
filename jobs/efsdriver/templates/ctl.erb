#!/bin/bash

set -e

CLIENT_CERTS_DIR=<%= p('efsdriver.driver_path') %>/certs/efsdriver
SERVER_CERTS_DIR=/var/vcap/jobs/efsdriver/config/certs
RUN_DIR=/var/vcap/sys/run/efsdriver
LOG_DIR=/var/vcap/sys/log/efsdriver
PIDFILE=$RUN_DIR/efsdriver.pid

SCRIPT=$(basename $0)

exec 1>> /var/vcap/sys/log/monit/${SCRIPT}.log
exec 2>> /var/vcap/sys/log/monit/${SCRIPT}.err.log

case $1 in
  start)
    echo "efsdriver starting"
    mkdir -p $RUN_DIR
    chown -R vcap:vcap $RUN_DIR

    mkdir -p $LOG_DIR
    chown -R vcap:vcap $LOG_DIR

    echo $$ > $PIDFILE

    # ldap connection and credential info are passed via environment
    export LDAP_SVC_USER='<%= p("efsdriver.ldap_svc_user").gsub("'", "'\"'\"'") %>'
    export LDAP_SVC_PASS='<%= p("efsdriver.ldap_svc_password").gsub("'", "'\"'\"'") %>'
    export LDAP_HOST="<%= p("efsdriver.ldap_host") %>"
    export LDAP_PORT="<%= p("efsdriver.ldap_port") %>"
    export LDAP_PROTO="<%= p("efsdriver.ldap_proto") %>"
    export LDAP_USER_FQDN="<%= p("efsdriver.ldap_user_fqdn") %>"
    export LDAP_CA_CERT="<%= p("efsdriver.ldap_ca_cert") %>"
    # Allowed number of open file descriptors
    ulimit -n 100000

    # volume drivers need to create directories with 777 so container users can see them
    umask 0

    ENABLE_INSECURE_SKIP_VERIFY=""
    <% if p("efsdriver.ssl.insecure_skip_verify") %>
    ENABLE_INSECURE_SKIP_VERIFY="--insecureSkipVerify"
    <% end %>

    exec chpst /var/vcap/packages/efsdriver/bin/efsdriver \
      --listenAddr="<%= p("efsdriver.listen_addr") %>" \
      --efsVolToolsAddr="<%= p("efsdriver.efs_vol_tools_addr") %>" \
      --transport="tcp-json" \
      <% if p("efsdriver.tls.ca_cert") != '' %>\
      --requireSSL \
      --certFile="${SERVER_CERTS_DIR}/server.crt" \
      --keyFile="${SERVER_CERTS_DIR}/server.key" \
      --caFile="${CLIENT_CERTS_DIR}/ca.crt" \
      --clientCertFile="${CLIENT_CERTS_DIR}/client.crt" \
      --clientKeyFile="${CLIENT_CERTS_DIR}/client.key" \
      ${ENABLE_INSECURE_SKIP_VERIFY} \
      <% end %>\
      --debugAddr="<%= p("efsdriver.debug_addr") %>" \
      --adminAddr="<%= p("efsdriver.admin_addr") %>" \
      --driversPath="<%= p("efsdriver.driver_path") %>" \
      --mountDir="<%= p("efsdriver.cell_mount_path") %>" \
      --logLevel="<%= p("efsdriver.log_level") %>" \
      --timeFormat="<%= p("efsdriver.log_time_format") %>" \
      --mapfsPath="<%= link("mapfs").p("path") %>" \
      2> >(tee -a $LOG_DIR/efsdriver.stderr.log | logger -p user.error -t vcap.efsdriver) \
      1> >(tee -a $LOG_DIR/efsdriver.stdout.log | logger -p user.info -t vcap.efsdriver)
    ;;

  stop)
    echo "efsdriver ending"
    if [ -f $PIDFILE ]; then
      kill -9 `cat $PIDFILE` || true
      rm -f $PIDFILE
    fi
    ;;

  *)
    echo "Usage: efsdriver_ctl {start|stop}"
    ;;
esac
