#!/bin/bash

set -e

RUN_DIR=/var/vcap/sys/run/efsbroker
LOG_DIR=/var/vcap/sys/log/efsbroker
PIDFILE=$RUN_DIR/efsbroker.pid

SCRIPT=$(basename $0)
mkdir -p /var/vcap/sys/log/monit

exec 1>> /var/vcap/sys/log/monit/${SCRIPT}.log
exec 2>> /var/vcap/sys/log/monit/${SCRIPT}.err.log

case $1 in
  start)
    mkdir -p $RUN_DIR
    chown -R vcap:vcap $RUN_DIR

    mkdir -p $LOG_DIR
    chown -R vcap:vcap $LOG_DIR

    mkdir -p "<%= p("efsbroker.data-dir") %>"
    chown -R vcap:vcap "<%= p("efsbroker.data-dir") %>"

    echo $$ > $PIDFILE

    export AWS_REGION='<%= p("efsbroker.aws-region") %>'
    <% if_p("efsbroker.aws-access-key-id") do |access_key| %>export AWS_ACCESS_KEY_ID='<%= access_key %>'<% end %>
    <% if_p("efsbroker.aws-secret-access-key") do |secret_key| %>export AWS_SECRET_ACCESS_KEY='<%= secret_key %>'<% end %>

    # pass credentials in through the environment for safety
    export DB_USERNAME="<%= p("efsbroker.db_username") %>"
    export DB_PASSWORD="<%= p("efsbroker.db_password") %>"

    exec chpst -u vcap:vcap /var/vcap/packages/efsbroker/bin/efsbroker \
      --listenAddr="<%= p("efsbroker.listen-addr") %>" \
      --serviceName="<%= p("efsbroker.service-name") %>" \
      --serviceId="<%= p("efsbroker.service-id") %>" \
      --servicesConfig=/var/vcap/jobs/efsbroker/config/services.json \
      --dataDir="<%= p("efsbroker.data-dir") %>" \
      --dbDriver="<%= p("efsbroker.db_driver") %>" \
      --credhubURL="<%= p("efsbroker.credhub.url") %>" \
      --password="<%= p("efsbroker.password") %>" \
      --username="<%= p("efsbroker.username") %>" \
      --uaaClientID="<%= p("efsbroker.credhub.clientid") %>" \
      --uaaClientSecret="<%= p("efsbroker.credhub.clientsecret") %>" \
      --uaaCACert="<%= p("efsbroker.uaa.ca") %>" \
      --credhubCACert="<%= p("efsbroker.credhub.ca") %>" \
      --awsSubnetIds="<%= p("efsbroker.aws-subnet-ids") %>" \
      --awsSecurityGroups="<%= p("efsbroker.aws-security-groups") %>" \
      --awsAZs="<%= p("efsbroker.aws-azs") %>" \
      --logLevel="<%= p("efsbroker.log_level") %>" \
      --timeFormat="<%= p("efsbroker.log_time_format") %>" \
      2> >(tee -a $LOG_DIR/efsbroker.stderr.log | logger -p user.error -t vcap.efsbroker) \
      1> >(tee -a $LOG_DIR/efsbroker.stdout.log | logger -p user.info -t vcap.efsbroker)
    ;;

  stop)
    if [ -f $PIDFILE ]; then
      kill -9 `cat $PIDFILE` || true
      rm -f $PIDFILE
    fi
    ;;

  *)
    echo "Usage: efsbroker_ctl {start|stop}"
    ;;
esac
